name: Preview Deploy (Firebase Hosting)

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  build-and-deploy:
    name: Build web and deploy preview
    runs-on: ubuntu-latest
    concurrency:
      group: firebase-preview-${{ github.event.pull_request.number }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Create firebase_options.dart
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_APP_ID_WEB: ${{ secrets.FIREBASE_APP_ID_WEB }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        run: |
          cat > lib/firebase_options.dart << EOF
          // File generated by GitHub Actions from secrets
          // DO NOT EDIT - This file is auto-generated in CI/CD

          import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
          import 'package:flutter/foundation.dart' show kIsWeb;

          class DefaultFirebaseOptions {
            // Only web is configured here. Native platforms (Android/iOS) should use
            // their platform-specific configuration files (e.g., google-services.json).
            static FirebaseOptions get currentPlatform {
              if (kIsWeb) {
                return web;
              }
              throw UnsupportedError(
                'DefaultFirebaseOptions.currentPlatform is only supported on web.\n'
                'Use Firebase.initializeApp() without options on Android/iOS.',
              );
            }

            static const FirebaseOptions web = FirebaseOptions(
              apiKey: '$FIREBASE_API_KEY',
              appId: '$FIREBASE_APP_ID_WEB',
              messagingSenderId: '$FIREBASE_MESSAGING_SENDER_ID',
              projectId: '$FIREBASE_PROJECT_ID',
              authDomain: '$FIREBASE_AUTH_DOMAIN',
              storageBucket: '$FIREBASE_STORAGE_BUCKET',
            );
          }
          EOF

      - name: Install dependencies
        run: flutter pub get

      - name: Build web
        run: flutter build web --release

      - name: Prune old Firebase preview channels
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          set -euo pipefail
          # Ensure jq is available
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y jq
          fi

          PROJECT_ID="$FIREBASE_PROJECT_ID"
          CURRENT_CHANNEL="pr-$PR_NUMBER"
          NOW_EPOCH=$(date -u +%s)

          # List channels; continue on error to avoid failing the job here
          CHANNELS_JSON=$(npx --yes firebase-tools@latest hosting:channel:list --project "$PROJECT_ID" --json || echo '{}')

          # Delete channels that:
          # - start with pr-
          # - are not the current PR channel
          # - and are either expired already or older than 24h by createTime (if present)
          echo "$CHANNELS_JSON" \
            | jq -r --arg now "$NOW_EPOCH" --arg keep "$CURRENT_CHANNEL" '
                .result // []
                | map({
                    id: (.name | capture("channels/(?<id>[^/]+)$").id),
                    expire: (.expireTime // null),
                    create: (.createTime // null)
                  })
                | map(select((.id | startswith("pr-")) and (.id != $keep)))
                | map(select(
                    ( .expire != null and ((.expire | fromdateiso8601) < ($now|tonumber)) ) or
                    ( .create != null and ((.create | fromdateiso8601) < (($now|tonumber) - 86400)) )
                  ))
                | .[].id
              ' \
            | while read -r CH; do
                echo "Deleting stale preview channel: $CH";
                npx --yes firebase-tools@latest hosting:channel:delete "$CH" --project "$PROJECT_ID" --force || true;
              done

      - name: Deploy to Firebase Hosting preview channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_ROUTINE_TIMER_403F2 }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          channelId: 'pr-${{ github.event.pull_request.number }}'
          expires: 1d
          entryPoint: '.'

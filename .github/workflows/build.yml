name: Build

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  workflow_dispatch:

jobs:
  build-web:
    name: Build Web
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Create firebase_options.dart
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_APP_ID_WEB: ${{ secrets.FIREBASE_APP_ID_WEB }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        run: |
          cat > lib/firebase_options.dart << EOF
          // File generated by GitHub Actions from secrets
          // DO NOT EDIT - This file is auto-generated in CI/CD

          import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
          import 'package:flutter/foundation.dart' show kIsWeb;

          class DefaultFirebaseOptions {
            // Only web is configured here. Native platforms (Android/iOS) should use
            // their platform-specific configuration files (e.g., google-services.json).
            static FirebaseOptions get currentPlatform {
              if (kIsWeb) {
                return web;
              }
              throw UnsupportedError(
                'DefaultFirebaseOptions.currentPlatform is only supported on web.\n'
                'Use Firebase.initializeApp() without options on Android/iOS.',
              );
            }

            static const FirebaseOptions web = FirebaseOptions(
              apiKey: '$FIREBASE_API_KEY',
              appId: '$FIREBASE_APP_ID_WEB',
              messagingSenderId: '$FIREBASE_MESSAGING_SENDER_ID',
              projectId: '$FIREBASE_PROJECT_ID',
              authDomain: '$FIREBASE_AUTH_DOMAIN',
              storageBucket: '$FIREBASE_STORAGE_BUCKET',
            );
          }
          EOF

      - name: Install dependencies
        run: flutter pub get

      - name: Build web
        run: flutter build web --release

      - name: Upload web build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/

  build-android:
    name: Build Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $GOOGLE_SERVICES_JSON | base64 --decode > android/app/google-services.json

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --release

      - name: Build Android App Bundle
        run: flutter build appbundle --release

      - name: Upload Android build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: |
            build/app/outputs/flutter-apk/
            build/app/outputs/bundle/release/

  deploy-preview:
    name: Deploy Firebase Hosting preview
    if: github.event_name == 'pull_request'
    needs: build-web
    runs-on: ubuntu-latest
    concurrency:
      group: firebase-preview-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    permissions:
      contents: read
      pull-requests: write
      checks: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download web build artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: .

      - name: Prepare web artifact for Firebase
        run: |
          mkdir -p build/web
          if [ -d "web-build/build/web" ]; then
            cp -a web-build/build/web/. build/web/
          elif [ -d "web-build" ]; then
            cp -a web-build/. build/web/
          else
            echo "web-build directory not found"; exit 1
          fi

      - name: Deploy to Firebase Hosting preview channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_ROUTINE_TIMER_403F2 }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          channelId: 'pr-${{ github.event.pull_request.number }}'
          expires: 1d
          entryPoint: '.'
